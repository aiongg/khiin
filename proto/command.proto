syntax = "proto3";

import "proto/config.proto";

package khiin.proto;

enum SpecialKey {
    SK_NONE = 0;
    SK_SPACE = 1;
    SK_ENTER = 2;
    SK_ESC = 3;
    SK_BACKSPACE = 4;
    SK_TAB = 5;
    SK_LEFT = 6;
    SK_UP = 7;
    SK_RIGHT = 8;
    SK_DOWN = 9;
    SK_PGUP = 10;
    SK_PGDN = 11;
    SK_HOME = 12;
    SK_END = 13;
    SK_DEL = 14;
}

enum ModifierKey {
    CTRL = 0;
    ALT = 1;
    SHIFT = 2;
}

// Each platform app should map from its own key set to this set.
// On hardware keyboards, |modifier_keys| may be used in combination
// with either a |special_key| or a normal ascii |key_code|
message KeyEvent {
    // For ASCII & printable letters
    int32 key_code = 1;

    // Other keys e.g., arrow keys
    SpecialKey special_key = 2;

    // Ctrl, Alt, Shift: More than 1 modifier can be pressed at a time
    repeated ModifierKey modifier_keys = 3;
}

enum CommandType {
    CMD_SEND_KEY = 0;
    CMD_REVERT = 1;
    CMD_RESET = 2;
    CMD_COMMIT = 3;
    CMD_SELECT_CANDIDATE = 4;
    CMD_FOCUS_CANDIDATE = 5;
    CMD_SWITCH_INPUT_MODE = 6;
    CMD_PLACE_CURSOR = 7;
    CMD_DISABLE = 8;
    CMD_ENABLE = 9;
    CMD_SET_CONFIG = 10;
    CMD_TEST_SEND_KEY = 11;
}

// Message sent from app to engine
message Request {
    CommandType type = 1;

    KeyEvent key_event = 2;

    // ID or index position of the candidate focused or selected by the user
    int32 candidate_id = 3;

    // Used if the user taps/clicks somewhere, otherwise arrow keys are sent
    // and the engine figures out its own cursor position
    int32 cursor_position = 4;

    AppConfig config = 5;
}

enum SegmentStatus {
    SS_UNMARKED = 0;       // No underline
    SS_COMPOSING = 1;  // Dots or squiggle underline
    SS_CONVERTED = 2;  // Solid underline
    SS_FOCUSED = 3;    // Thick, solid underline
}

// The display buffer text and cursor position
message Preedit {
    message Segment {
        // For visual feedback to the user
        SegmentStatus status = 1;

        // The text to be displayed
        string value = 2;
    }

    repeated Segment segments = 1;
    int32 cursor_position = 2;
}

// All candidates for the current |Composition|
// App should decide how to show and navigate candidates,
// and use an InputEvent to report back the |candidate_id| as
// user navigates
message Candidate {

    // Used to style the text for providing a visual cue to the user
    enum Category {
        BASIC = 0;  // Regular text color
        EXTENDED = 1;    // Highlighted text color
        FALLBACK = 2;    // De-emphasized text color
    }

    int32 id = 1;
    
    // The text of the candidate
    string value = 2;

    // The Lomaji input string associated with this candidate
    string key = 3;

    // A hint that can appear near the candidate
    string annotation = 4;

    Category category = 5;
}

message CandidateList {
    repeated Candidate candidates = 1;

    // The focused candidate should be highlighted for the user
    int32 focused = 2;
}

enum ErrorCode {
    OK = 0;
    FAIL = 1;
}

enum EditState {
    ES_EMPTY = 0;
    ES_COMPOSING = 1;
    ES_CONVERTED = 2;
    ES_SELECTING = 3;
}

// The response portion of the message, from engine back to app
message Response {
    ErrorCode error = 1;
    Preedit preedit = 2;
    CandidateList candidate_list = 3;
    EditState edit_state = 4;

    // Used with Windows TSF OnTestKeyDown method
    bool consumable = 5;
}

// A full command bundle, passed between app and engine
// during each edit session
message Command {
    Request request = 1;
    Response response = 2;
}
